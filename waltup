#!/usr/bin/env bash

IMGPATH=$1
IMG=$(basename "$IMGPATH")
IMGNAME="${IMG%.*}"

show_help() {
	cat <<EOF
"Usage: waltup /abs/path/to/img"
EOF
	exit 1
}

if [ $# = 0 ]; then
	echo "Missing argument!"
	show_help
fi

check_inst() {
	echo "Checking if $1 is installed..."
	if ! pacman -Qi "$1" >/dev/null; then
		echo "Installing $1 ..."
		yay -S "$1"
	fi
	return 0
}
set_wallpaper() {
	feh --bg-fill "$IMGPATH"
	if ! grep "^feh --bg-fill" ~/.config/awesome/autostart.sh >/dev/null; then
		echo "feh --bg-fill $IMGPATH" >>~/.config/awesome/autostart.sh
	fi
	sed -ir "s|^feh --bg-fill \S*$|feh --bg-fill $IMGPATH|g" ~/.config/awesome/autostart.sh
}

set_pywal() {
	echo "Runnging pywal with $IMGNAME..."
	case $1 in
	dark)
		wal -q -i "$IMGPATH"
		;;
	light)
		wal -l -q -i "$IMGPATH"
		;;
	esac
}

set_pywal_autostart() {
	echo "Adding wal theme to awesome autostart..."
	if ! grep "^wal -R" ~/.config/awesome/autostart.sh >/dev/null; then
		echo "wal -R" >>~/.config/awesome/autostart.sh
	fi
}

set_gtk_theme() {
	echo "Configuring gtk themes..."
	/opt/oomox/plugins/theme_oomox/gtk-theme/change_color.sh -o wal-oomox-"$IMGNAME" -m all -d true --hidpi --true ~/.cache/wal/colors-oomox >/dev/null
	lxappearance
}

set_icons() {
	echo "Configuring icons..."
	/opt/oomox/plugins/icons_gnomecolors/gnome-colors-icon-theme/change_color.sh -o wal-oomox-icons-"$IMGNAME" ~/.cache/wal/colors-oomox >/dev/null
	echo "Oppening lxpappearance to apply theme and icons..."
	lxappearance >/dev/null
}

check_pywalfox_inst() {
	echo "Checking if pywalfox is installed..."
	if ! pip show pywalfox >/dev/null; then
		echo "Installing pywalfox..."
		pip install pywalfox >/dev/null
	fi
	return 0
}

setup_pywalfox() {
	sudo chmod +x ~/.local/lib/python3.8/site-packages/pywalfox/bin/main.sh
	echo "Setting pywalfox up..."
	pywalfox setup
	echo "Running pywalfox daemon..."
	pywalfox daemon &
	echo "Now install firefox extension and fetch pywal colors..."
	firefox https://addons.mozilla.org/en-US/firefox/addon/pywalfox/?src=search
	# killall pywalfox
}

set_telegram_pywal() {
	echo "Clonning telegram-palette-gen repo..."
	git clone --depth 1 https://github.com/matteoguarda/telegram-palette-gen ~/.telegram-palette-gen
	echo "Generating theme for telegram..."
	~/.telegram-palette-gen/telegram-palette-gen --wal
	echo "Openning telegram to apply theme..."
	telegram-desktop >/dev/null
}

set_lightdm_wallpaper() {
	sudo cp "$IMGPATH" /usr/share/pixmaps/lightdm_back.jpg
	sudo chmod 777 /usr/share/pixmaps/lightdm_back.jpg
}

set_awesome_pywal() {
	echo "Setting wal colors for awesomewm..."
	~/scripts/awesomewal
	echo "Restarting awesome..."
	echo 'awesome.restart()' | awesome-client >/dev/null
}

set_betterlockscreen_wallpaper() {
	betterlockscreen -u "$IMGPATH"
}

check_doomemacs_inst() {
	if ! ~/.emacs.d/bin/doom info; then
		echo "It seems like you don't have doom emacs installed"
		return 1
	fi
	return 0
}

set_doomemacs_pywal() {
	if ! grep "^(package! ewal)" ~/.doom.d/packages.el >/dev/null; then
		sed -i '0,/^(package! \S*)$/s/^(package! \S*)$/(package! ewal)\n&/' ~/.doom.d/packages.el
	fi
	if ! grep "^(package! ewal-doom-themes)" ~/.doom.d/packages.el >/dev/null; then
		sed -i '0,/^(package! \S*)$/s/^(package! \S*)$/(package! ewal-doom-themes)\n&/' ~/.doom.d/packages.el
	fi
	if ! grep "^(package! ewal-evil-cursors)" ~/.doom.d/packages.el >/dev/null; then
		sed -i '0,/^(package! \S*)$/s/^(package! \S*)$/(package! ewal-evil-cursors)\n&/' ~/.doom.d/packages.el
	fi
	~/.emacs.d/bin/doom sync
	sed -ir "s|^(setq doom-theme '\S*)|(setq doom-theme 'ewal-doom-one)|g" ~/.doom.d/config.el
}

set_vim_pywal() {
	if ! grep "^Plugin 'dylanaraps/wal.vim'" ~/.vimrc >/dev/null; then
		sed -i "0,/^Plugin '\S*'$/s/^Plugin '\S*'$/Plugin 'dylanraps\/wal.vim'\n&/" ~/.vimrc
	fi
	if ! grep "^colorscheme wal" ~/.vimrc >/dev/null; then
		sed -i "s/^colorscheme \S*$/colorscheme wal/g" ~/.vimrc
	fi
	nvim + 'PluginInstall --sync' +qa
}

set_discord_pywal() {
	echo "Installing beautifuldiscord..."
	python3 -m pip install -U https://github.com/leovoel/BeautifulDiscord/archive/master.zip
	git clone https://github.com/guglicap/wal-discord ~/wal-discord
	ln -s ~/wal-discord/wal-discord ~/.local/bin
	wal-discord >/dev/null
	echo "If you're running this script first time run 'beautifuldiscord --css ~/.cache/wal-discord/style.css' after the script"

}

read -r -p "Do you want to generate light theme?... (y/N): " ANSWER
case $ANSWER in
y | yes | Y | YES)
	echo "Setting light pywal theme up..."
	check_inst python-pywal && set_pywal light
	;;
*)
	echo "Setting dark pywal theme up..."
	check_inst python-pywal && set_pywal dark
	;;
esac

# -w flag
read -r -p "Set $IMG as a wallpapaper?... (Y/n): " ANSWER
case $ANSWER in
n | no | N | NO)
	echo "Skipping setting $IMG as a wallpaper..."
	;;
*)
	check_inst feh && set_wallpaper
	;;
esac

# -s flag
read -r -p "Enable pywal theme on awesome startup?... (Y/n): " ANSWER
case $ANSWER in
n | no | N | NO)
	echo "Skipping setting pywal theme on awesomewm startup..."
	;;

*)
	check_inst awesome && set_pywal_autostart
	;;
esac

# -g flag
read -r -p "Generate pywal theme for gtk?... (Y/n): " ANSWER
case $ANSWER in
n | no | N | NO)
	echo "Skipping generating pywal theme for gtk..."
	;;
*)
	check_inst oomox && set_gtk_theme
	;;
esac

# -i flag
read -r -p "Generate pywal icons?... (Y/n): " ANSWER
case $ANSWER in
n | no | N | NO)
	echo "Skipping generating pywal icons..."
	;;
*)
	check_inst oomox && set_icons
	;;
esac

# -f flag
read -r -p "Generate pywal theme for firefox?... (Y/n): " ANSWER
case $ANSWER in
n | no | N | NO)
	echo "Skipping generation pywal theme for firefox..."
	;;
*)
	check_inst firefox && check_pywalfox_inst && setup_pywalfox
	;;
esac

# -t flag
read -r -p "Generate pywal theme for telegram?... (Y/n): " ANSWER
case $ANSWER in
n | no | N | NO)
	echo "Skipping generating pywal theme for telegram..."
	;;
*)
	check_inst telegram-desktop && set_telegram_pywal
	;;
esac

# -m flag
read -r -p "Set $IMG as a lightdm background?... (Y/n): " ANSWER
case $ANSWER in
n | no | N | NO)
	echo "Skipping setting $IMG as a lightdm background..."
	;;
*)
	check_inst lightdm && set_lightdm_wallpaper
	;;
esac

# -a flag
read -r -p "Generate pywal theme for awesomewm?... (Y/n): " ANSWER
case $ANSWER in
n | no | N | NO)
	echo "Skipping generating pywal theme for awesomewm..."
	;;
*)
	check_inst awesome && set_awesome_pywal
	;;
esac

# -b flag
read -r -p "Set $IMG as a betterlockscreen wallpaper?... (Y/n): " ANSWER
case $ANSWER in
n | no | N | NO)
	echo "Skipping setting $IMG as a betterlockscreen wallpaper..."
	;;
*)
	check_inst betterlockscreen && set_betterlockscreen_wallpaper
	;;
esac

# -e flag
read -r -p "Set pywal theme for emacs?... (Y/n): " ANSWER
case $ANSWER in
n | no | N | NO)
	echo "Skipping setting pywal theme for emacs..."
	;;
*)
	check_dooomemacs_inst && set_doomemacs_pywal
	;;
esac

# -d flag
read -r -p "Set pywal theme for discord?... (Y/n): " ANSWER
case $ANSWER in
n | no | N | NO)
	echo "Skipping setting pywal theme for discord..."
	;;
*)
	check_inst discord && set_discord_pywal
	;;
esac

# -v flag
read -r -p "Set pywal theme for vim?... (Y/n): " ANSWER
case $ANSWER in
n | no | N | NO)
	echo "Skipping setting pywal theme for vim..."
	;;
*)
	check_inst vim && set_vim_pywal
	;;
esac
